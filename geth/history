personal.listAccounts
personal.newAccount("toto")
personal.listAccounts
eth.coinbase
eth.getBalance(eth.coinbase)
miner.start();admin.sleepBlocks(1);miner.stop();
eth.getBalance(eth.coinbase)
abi = [{constant: false, inputs: [], name: "getVisibilities", outputs: [{name: "", type: "bool[3]"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "answers", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "questions", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: false, inputs: [], name: "getResults", outputs: [{name: "", type: "int256[3][3]"}], type: "function"}, {constant: true, inputs: [], name: "closed", outputs: [{name: "", type: "bool"}], type: "function"}, {constant: false, inputs: [{name: "_visibilities", type: "bool[3]"}], name: "close", outputs: [], type: "function"}, {constant: false, inputs: [], name: "mySubmission", outputs: [{name: "", type: "uint8[3]"}], type: "function"}, {constant: false, inputs: [{name: "answ", type: "uint8[3]"}], name: "submit", outputs: [], type: "function"}, {inputs: [{name: "quests", type: "bytes32[3]"}, {name: "answ", type: "bytes32[3]"}], type: "constructor"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "newResults", type: "event"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "over", type: "event"}]
rhchain = eth.contract(abi).at("0x7e6e4786c3c9808136124b9ef6707ba56ecbc981")
eth.coinbase
personal.unlockAccount(eth.coinbase,"toto")
rhchain
abi = [{constant: false, inputs: [], name: "getVisibilities", outputs: [{name: "", type: "bool[3]"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "answers", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "questions", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: false, inputs: [], name: "getResults", outputs: [{name: "", type: "int256[3][3]"}], type: "function"}, {constant: true, inputs: [], name: "closed", outputs: [{name: "", type: "bool"}], type: "function"}, {constant: false, inputs: [{name: "_visibilities", type: "bool[3]"}], name: "close", outputs: [], type: "function"}, {constant: false, inputs: [], name: "mySubmission", outputs: [{name: "", type: "uint8[3]"}], type: "function"}, {constant: false, inputs: [{name: "answ", type: "uint8[3]"}], name: "submit", outputs: [], type: "function"}, {inputs: [{name: "quests", type: "bytes32[3]"}, {name: "answ", type: "bytes32[3]"}], type: "constructor"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "newResults", type: "event"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "over", type: "event"}]
rhchain = eth.contract(abi).at("0x7e6e4786c3c9808136124b9ef6707ba56ecbc981")
admin.peers
admin.addPeer("enode://971ca9180a27188baacabc0f3987503b227019cc7e607be92ae6c01e8e0f78194d95da60a5d2bb959e5dd8c8abab3c0f82f929baca2dedb8ee7fd502afad9e7b@[::]:30305")
rhchain = eth.contract(abi).at("0x7e6e4786c3c9808136124b9ef6707ba56ecbc981")
rhchain
web3.eth.coinbase
eth.getBalance(eth.coinbase)
miner.start();admin.sleepBlocks(1);miner.stop()
eth.getBalance(eth.coinbase)
eth.coinbase
eth.getBalance(eth.coinbase)
miner.start()
miner.stop()
eth.getBalance()
eth.getBalance(eth.coinbase)
web3.fromWei(eth.getBalance(eth.coinbase),'ether')
eth.getBalance(eth.coinbase)
rhchain
admin.addPeer("enode://971ca9180a27188baacabc0f3987503b227019cc7e607be92ae6c01e8e0f78194d95da60a5d2bb959e5dd8c8abab3c0f82f929baca2dedb8ee7fd502afad9e7b@[::]:30305")
abi = [{constant: false, inputs: [], name: "getVisibilities", outputs: [{name: "", type: "bool[3]"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "answers", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "questions", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: false, inputs: [], name: "getResults", outputs: [{name: "", type: "int256[3][3]"}], type: "function"}, {constant: true, inputs: [], name: "closed", outputs: [{name: "", type: "bool"}], type: "function"}, {constant: false, inputs: [{name: "_visibilities", type: "bool[3]"}], name: "close", outputs: [], type: "function"}, {constant: false, inputs: [], name: "mySubmission", outputs: [{name: "", type: "uint8[3]"}], type: "function"}, {constant: false, inputs: [{name: "answ", type: "uint8[3]"}], name: "submit", outputs: [], type: "function"}, {inputs: [{name: "quests", type: "bytes32[3]"}, {name: "answ", type: "bytes32[3]"}], type: "constructor"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "newResults", type: "event"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "over", type: "event"}]
rhchain = eth.contract(abi).at("0x7e6e4786c3c9808136124b9ef6707ba56ecbc981")
rhchain.mySubmission.call()
rhchain.close.call()
rhchain.closed.call()
rhchain.closed
rhchain.closed()
rhchain = eth.contract(abi).at("0xcdaac42e8fb197c0d6b8b4759bfe3721f7ed55a2")
rhchain.mySubmission()
rhchain.mySubmission.call()
rhchain.mySubmission()
rhchain
rhchain.mySubmission
rhchain.mySubmission.arguments
rhchain.mySubmission.call()
eth.getBalance(eth.coinbase)
web3.fromWei(eth.getBalance(eth.coinbase),'ether')
rhchain.submit([0,1,2])
rhchain.submit.call([0,1,2])
rhchain.submit.sendTransaction([0,1,2],{from:eth.coinbase,gas:900000})
rhchain.mySubmission.call()
rhchain.closed.call()
abi = [{constant: false, inputs: [], name: "getVisibilities", outputs: [{name: "", type: "bool"}, {name: "", type: "bool[3]"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "answers", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: true, inputs: [{name: "", type: "uint256"}], name: "questions", outputs: [{name: "", type: "bytes32"}], type: "function"}, {constant: false, inputs: [], name: "getResults", outputs: [{name: "", type: "int256[3][3]"}], type: "function"}, {constant: true, inputs: [], name: "closed", outputs: [{name: "", type: "bool"}], type: "function"}, {constant: false, inputs: [{name: "_visibilities", type: "bool[3]"}], name: "close", outputs: [], type: "function"}, {constant: false, inputs: [], name: "mySubmission", outputs: [{name: "", type: "bool"}, {name: "", type: "uint8[3]"}], type: "function"}, {constant: false, inputs: [{name: "answ", type: "uint8[3]"}], name: "submit", outputs: [], type: "function"}, {inputs: [{name: "quests", type: "bytes32[3]"}, {name: "answ", type: "bytes32[3]"}], type: "constructor"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "newResults", type: "event"}, {anonymous: false, inputs: [{indexed: false, name: "results", type: "int256[3][3]"}], name: "over", type: "event"}]
rhchain = eth.contract(abi).at("0x6505266e12864e08fcb88b30e6b9b4ce4e4ac7ad")
rhchain.mySubmission.call()
admin.peers
abi = [{"constant": false, "inputs": [], "name": "getVisibilities", "outputs": [{"name": "", "type": "bool"}, {"name": "", "type": "bool[3]"}], "type": "function"}, {"constant": true, "inputs": [{"name": "", "type": "uint256"}], "name": "answers", "outputs": [{"name": "", "type": "bytes32"}], "type": "function"}, {"constant": true, "inputs": [{"name": "", "type": "uint256"}], "name": "questions", "outputs": [{"name": "", "type": "bytes32"}], "type": "function"}, {"constant": false, "inputs": [], "name": "getResults", "outputs": [{"name": "", "type": "bool"}, {"name": "", "type": "int256[3][3]"}], "type": "function"}, {"constant": true, "inputs": [], "name": "closed", "outputs": [{"name": "", "type": "bool"}], "type": "function"}, {"constant": false, "inputs": [{"name": "_visibilities", "type": "bool[3]"}], "name": "close", "outputs": [{"name": "", "type": "bool"}], "type": "function"}, {"constant": false, "inputs": [], "name": "mySubmission", "outputs": [{"name": "", "type": "bool"}, {"name": "", "type": "uint8[3]"}], "type": "function"}, {"constant": false, "inputs": [{"name": "answ", "type": "uint8[3]"}], "name": "submit", "outputs": [{"name": "", "type": "bool"}], "type": "function"}, {"inputs": [{"name": "quests", "type": "bytes32[3]"}, {"name": "answ", "type": "bytes32[3]"}], "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "name": "results", "type": "int256[3][3]"}], "name": "newResults", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "name": "results", "type": "int256[3][3]"}], "name": "over", "type": "event"}]
rhchain = eth.contract(abi).at("0x20ebcd652517c0c42919f86db9cbf41b9e404d95")
rhchain.mySubmission.call()
rhchain = eth.contract(abi).at("0xe79a5b23bfb4c7ca2110bed2d6c56cbd21f457a7")
admin.peers
admin.nodeInfo
rhchain.closed.call()
rhchain.address
rhchain.mySubmission.call)
rhchain.mySubmission.call()
rhchain = eth.contract(abi).at("0x797fcab99e67fddce0c01ad24ab0615595766817")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0x0e8cb81c5e5084bcab7420aafc40380789cd99c2")
rhchain = eth.contract(abi).at("0x1f08489adb117c4f2113970f6c19ea85a339df67")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0x03c3cf0f44c586e4a019511a00399e29eb380c27")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0xe139b4ceb1de34619dc48d5e65174b03fd4a407e")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0xd31015f6a7bf54a7e1117d2bdb5fb808c356c1b5")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0x5bac223bc781aac93db48a9d761cfa40fbd1d7fe")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0x0e8cb81c5e5084bcab7420aafc40380789cd99c2")
rhchain = eth.contract(abi).at("0x1ff06cd1b4ebe0a381d1478ad0d11795a7e02eb2")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
rhchain = eth.contract(abi).at("0x8d8c31f4375e2edf85207f98b7a80b144f61d253")
admin.nodeInfo
rhchain.address
rhchain
rhchain = eth.contract(abi).at("0x8d6c9569a852f534ab979aefa6898f45385bd6e3")
rhchain.submit.sendTransaction([1,2,0],{from:eth.coinbase,gas:900000})
eth.coinbase
abi = [{"constant": false, "inputs": [], "name": "getVisibilities", "outputs": [{"name": "", "type": "bool"}, {"name": "", "type": "bool[3]"}], "type": "function"}, {"constant": true, "inputs": [{"name": "", "type": "uint256"}], "name": "answers", "outputs": [{"name": "", "type": "bytes32"}], "type": "function"}, {"constant": true, "inputs": [{"name": "", "type": "uint256"}], "name": "questions", "outputs": [{"name": "", "type": "bytes32"}], "type": "function"}, {"constant": false, "inputs": [], "name": "getResults", "outputs": [{"name": "", "type": "bool"}, {"name": "", "type": "int256[3][3]"}], "type": "function"}, {"constant": true, "inputs": [], "name": "closed", "outputs": [{"name": "", "type": "bool"}], "type": "function"}, {"constant": false, "inputs": [{"name": "_visibilities", "type": "bool[3]"}], "name": "close", "outputs": [{"name": "", "type": "bool"}], "type": "function"}, {"constant": false, "inputs": [], "name": "mySubmission", "outputs": [{"name": "", "type": "bool"}, {"name": "", "type": "uint8[3]"}], "type": "function"}, {"constant": false, "inputs": [{"name": "answ", "type": "uint8[3]"}], "name": "submit", "outputs": [{"name": "", "type": "bool"}], "type": "function"}, {"inputs": [{"name": "quests", "type": "bytes32[3]"}, {"name": "answ", "type": "bytes32[3]"}], "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "name": "results", "type": "int256[3][3]"}], "name": "newResults", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "name": "results", "type": "int256[3][3]"}], "name": "over", "type": "event"}]
rhchain = eth.contract(compiled.RHChain.info.abiDefinition).new(["0xd6d82d1d3657312dc08d2108b09029bb501f8cdab6b6bbe7b9408b13d9ced6e7","0x887d8df6aaf3010c9eefed46e2ad03e7b411e84b7f37edd9af0dab6cc29cf257","0x926ef6616a951b0d880385dd2a65850a0b50eb1edc180310ed22b821172e2b10"],["0x910ef7ea438885df31719697a6f71372f16381791e7ba4533dd3df07686e54f6","0x41e2723e115c71a7045d3b1fae971320655b5209b6084bedea3dfd6ff5681efe","0x3bebf25073e42779969fe7d39279c4e0e1af9b3a5d83d30b46af408cad562643"],{from: eth.coinbase, data: compiled.RHChain.code, gas: 2000000})
sources = "contract RHChain {address private admin; bool[3] private visibilities; /* [q1.visibile,q2.visibile,q3.visibile] */ mapping( address => bool ) private hasSubmitted; mapping( address =>  uint8[3] ) private submissions; /* @ --> [idx q1.answer,idx q2.answer, idx q3.answer] */ int[3][3] private results; /* [nb vote q1.answer1, nb vote q1.answer2, nb vote q1.answer3 ][...] */ bool public closed = false; bytes32[3] public questions; /* questions hash */ bytes32[3] public answers; /* answers hash */ event newResults(int[3][3] results); event over(int[3][3] results); /* returns results with visibility. -1 is : not visible */ modifier onlyAdmin {if( msg.sender != admin ) throw; _ } modifier onlyCollab{if( msg.sender == admin ) throw; _ } modifier onlyOnce{if( hasSubmitted[msg.sender] ) throw; _ } modifier onlyOpened {if( closed ) throw; _ } function RHChain(bytes32[3] quests, bytes32[3] answ){admin = msg.sender; questions = quests; answers = answ; } function submit(uint8[3] answ) onlyOpened onlyCollab onlyOnce returns(bool){if( !isSubmissionValid(answ) ) throw; submissions[msg.sender] = answ; hasSubmitted[msg.sender] = true; for(uint8 i=0;i<results.length;i++){results[i][answ[i]]++; } newResults(results); return true; } function close(bool[3] _visibilities) onlyAdmin onlyOpened returns(bool){visibilities = _visibilities; closed = true; over(resultsWithVisibilityFilter()); return true; } function mySubmission() returns(bool,uint8[3]) {if( msg.sender == admin ) throw; if( !hasSubmitted[msg.sender] ) throw; else return (true,submissions[msg.sender]); } function getResults() returns(bool, int[3][3] ){if( msg.sender == admin ) return (true,results); else if( closed ) return (true,resultsWithVisibilityFilter()); else throw; } function getVisibilities() onlyAdmin returns(bool, bool[3] )  {return (true,visibilities); } function isSubmissionValid(uint8[3] sub) private returns (bool){for(uint i=0;i<sub.length;i++){if( sub[i]<0 || sub[i] > 2 ) return false; } return true; } function resultsWithVisibilityFilter() private returns(int[3][3] ret) {ret = results; for(uint8 i=0;i<results.length;i++){if( !visibilities[i] ){for( uint8 j=0 ; j<results.length ; j++){ret[i][j] =-1; } }   } } }"
compiled = eth.compile.solidity(sources)
rhchain = eth.contract(compiled.RHChain.info.abiDefinition).new(["0xd6d82d1d3657312dc08d2108b09029bb501f8cdab6b6bbe7b9408b13d9ced6e7","0x887d8df6aaf3010c9eefed46e2ad03e7b411e84b7f37edd9af0dab6cc29cf257","0x926ef6616a951b0d880385dd2a65850a0b50eb1edc180310ed22b821172e2b10"],["0x910ef7ea438885df31719697a6f71372f16381791e7ba4533dd3df07686e54f6","0x41e2723e115c71a7045d3b1fae971320655b5209b6084bedea3dfd6ff5681efe","0x3bebf25073e42779969fe7d39279c4e0e1af9b3a5d83d30b46af408cad562643"],{from: eth.coinbase, data: compiled.RHChain.code, gas: 2000000})
admin.nodeInfo.enode
admin.peers
rhchain.address
